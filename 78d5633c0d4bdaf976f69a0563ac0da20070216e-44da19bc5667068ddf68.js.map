{"version":3,"file":"78d5633c0d4bdaf976f69a0563ac0da20070216e-44da19bc5667068ddf68.js","mappings":"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","sources":["webpack://sky-plus-epg-simulator/./src/data/ErrorCodes.tsx","webpack://sky-plus-epg-simulator/./src/components/ErrorMessage.tsx","webpack://sky-plus-epg-simulator/./src/constants/Genres.ts","webpack://sky-plus-epg-simulator/./src/data/epg/AllChannels.ts"],"sourcesContent":["import React from 'react'\n\n/**\n * List of known Sky error codes.\n *\n * Not complete at all.\n */\nenum ErrorCodes {\n  NO_CARD_INSERTED = 1,\n  CARD_READ_ERROR = 2,\n  CARD_CHECK_FAIL = 3,\n  UNAUTHORISED_CARD = 6,\n  /**\n   * CP01 on Sky+HD R010 and newer\n   */\n  UNPAIRED_CARD = 7,\n  ENCRYPTION_KEY_FAILURE = 8,\n  UNAUTHORISED_CARD_2 = 9,\n  NO_SATELLITE_SIGNAL = 28,\n  NO_SATELLITE_SIGNAL_2 = 29,\n}\n\nexport const ErrorText = {\n  [ErrorCodes.NO_CARD_INSERTED]: <>Insert your Sky viewing card</>,\n  [ErrorCodes.NO_SATELLITE_SIGNAL]: (\n    <>\n      No Satellite Signal is being received.\n      <br />\n      Please unplug your box from the mains, then plug it back in and wait 5 minutes before trying again.\n      <br />\n      If the fault persists, contact customer services.\n    </>\n  ),\n  [ErrorCodes.NO_SATELLITE_SIGNAL_2]: (\n    <>\n      No Satellite Signal is being received.\n      <br />\n      Please unplug your box from the mains, then plug it back in and wait 5 minutes before trying again.\n      <br />\n      If the fault persists, contact customer services.\n    </>\n  ),\n} as const\n\nexport default ErrorCodes\n","import { controlsState } from '@atoms'\nimport Colors from '@data/Colors'\nimport ErrorCodes, { ErrorText } from '@data/ErrorCodes'\nimport controlsShownStateSetter from '@helpers/controlsShownStateSetter'\nimport { makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\nimport React, { useEffect } from 'react'\nimport { useSetRecoilState } from 'recoil'\nimport ControlText from './ControlVisualisers/ControlText'\n\nconst useStyles = makeStyles({\n  messageBox: {\n    width: '80%',\n    overflow: 'hidden',\n    maxHeight: '80%',\n  },\n  messageBoxWider: {\n    width: '92%',\n  },\n  messageBoxHorizCenter: {\n    margin: 'auto',\n  },\n  messageBoxHeader: {\n    background: Colors.yellowMain,\n    color: Colors.main,\n    textTransform: 'uppercase',\n    lineHeight: '29px',\n    fontSize: 24,\n    textAlign: 'center',\n    position: 'relative',\n\n    fontFamily: 'Zurich',\n    fontStretch: 'expanded',\n    fontWeight: 700,\n    letterSpacing: 0.4,\n  },\n  messageBoxErrorCode: {\n    position: 'absolute',\n    right: 4,\n  },\n  messageBoxContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: 4,\n    paddingBottom: 1,\n    fontFamily: 'ZurichBT',\n    fontWeight: 400,\n    background: Colors.mainLight,\n    color: Colors.mainText,\n    fontSize: 25,\n    textAlign: 'center',\n    letterSpacing: 0.5,\n    lineHeight: '32px',\n    minHeight: 32 * 4 + 4 + 4,\n  },\n  messageBoxFooter: {\n    color: Colors.yellowText,\n    paddingBottom: 1,\n  },\n})\n\nexport interface ErrorMessageProps {\n  /**\n   * Error message title\n   *\n   * @default \"For your information\"\n   */\n  title?: string\n  /**\n   * Error message number\n   *\n   * @default 28\n   */\n  errorCode?: number | null\n  /**\n   * Error message content\n   *\n   * @default \"No Satellite Signal is being received. [...]\"\n   */\n  children?: React.ReactNode\n  /**\n   * Whether to show the Back Up prompt or not\n   *\n   * @default false\n   */\n  controlPrompt?: boolean\n  /**\n   * Custom Back Up prompt action text.\n   *\n   * Results in: `Press BACK UP to <text here>`\n   */\n  controlPromptAction?: string\n  onControlPressed?: () => void\n  /**\n   * Info to be used to choose a custom control to watch for.\n   *\n   * `text` is shown as part of the `controlPrompt`, and `control` is used for the event listener.\n   */\n  customControlData?: {\n    text: string\n    control: SkyControl\n  }\n  /**\n   * Use the wider variant of error message. This is used when the error message is shown within the EPG itself.\n   */\n  wider?: boolean\n  /**\n   * Horizontally center the message box within the parent container.\n   *\n   * (Applies `margin: auto`.)\n   */\n  horizontallyCentered?: boolean\n  /**\n   * Classes to apply to the message box's root node.\n   */\n  className?: string\n}\n\n/**\n * Displays a Sky-themed error message.\n *\n * Defaults to a No Satellite error.\n *\n * Title is almost always \"FOR YOUR INFORMATION\" on a real box.\n */\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({\n  title = 'For your information',\n  errorCode = ErrorCodes.NO_SATELLITE_SIGNAL,\n  children = ErrorText[ErrorCodes.NO_SATELLITE_SIGNAL],\n  customControlData = { text: 'BACK UP', control: 'backUp' },\n  controlPrompt = false,\n  controlPromptAction = 'return',\n  onControlPressed = () => {},\n  wider = false,\n  horizontallyCentered = false,\n  className,\n}) => {\n  const classes = useStyles()\n  const setControlsState = useSetRecoilState(controlsState)\n\n  if (controlPrompt) {\n    setControlsState(controlsShownStateSetter('backUp', true))\n  }\n\n  useEffect(() => {\n    if (controlPrompt) {\n      function backUpEventListener(e: SkyControlPressedEvent) {\n        if (e.detail.control === customControlData.control) {\n          e.stopImmediatePropagation()\n          onControlPressed()\n        }\n      }\n\n      document.addEventListener('skyControlPressed', backUpEventListener)\n\n      return () => {\n        document.removeEventListener('skyControlPressed', backUpEventListener)\n        setControlsState(controlsShownStateSetter('backUp', false))\n      }\n    }\n  })\n\n  return (\n    <section\n      role=\"alert\"\n      className={clsx(classes.messageBox, wider && classes.messageBoxWider, horizontallyCentered && classes.messageBoxHorizCenter, className)}\n    >\n      <header className={classes.messageBoxHeader}>\n        {title}\n        <span className={classes.messageBoxErrorCode}>\n          {errorCode !== null && typeof errorCode !== 'undefined' && String(errorCode).padStart(2, '0')}\n        </span>\n      </header>\n      <article className={classes.messageBoxContent}>\n        {children}\n        {controlPrompt && (\n          <footer className={classes.messageBoxFooter}>\n            Press <ControlText>{customControlData.text}</ControlText> to {controlPromptAction}\n          </footer>\n        )}\n      </article>\n    </section>\n  )\n}\n\nexport default ErrorMessage\n","/**\n * All genres mapped to their respective genre IDs.\n *\n * Genre ID matches what is specified in `xsg`.\n */\nexport enum Genres {\n  /**\n   * Includes Sky Intro, etc.\n   */\n  SkySpecialChannels = 0,\n  Shopping = 1,\n  Kids = 2,\n  Entertainment = 3,\n  Radio = 4,\n  News = 5,\n  Movies = 6,\n  Sports = 7,\n  /**\n   * Not present on new boxes. Has no channels in the category.\n   *\n   * Not sure if this is `8` or not, but it slots nicely in the gap.\n   */\n  LifestyleAndCulture = 8,\n  Adult = 9,\n  /**\n   * Not present on new boxes. Has no channels in the category.\n   *\n   * Not sure if this is `10` or not, but it slots nicely in the gap.\n   */\n  GamingAndDating = 10,\n  Documentaries = 11,\n  Music = 12,\n  Religion = 13,\n  International = 14,\n  /**\n   * No channels are in this category.\n   */\n  Specialist = 15,\n}\n\nexport const GenreName: Record<Genres, string> = {\n  [Genres.SkySpecialChannels]: '',\n  [Genres.Shopping]: 'Shopping',\n  [Genres.Kids]: 'Kids',\n  [Genres.Entertainment]: 'Entertainment',\n  [Genres.Radio]: 'Radio',\n  [Genres.News]: 'News',\n  [Genres.Movies]: 'Movies',\n  [Genres.Sports]: 'Sports',\n  [Genres.LifestyleAndCulture]: 'Lifestyle & Culture',\n  [Genres.Adult]: 'Adult',\n  [Genres.GamingAndDating]: 'Gaming & Dating',\n  [Genres.Documentaries]: 'Documentaries',\n  [Genres.Music]: 'Music',\n  [Genres.Religion]: 'Religion',\n  [Genres.International]: 'International',\n  [Genres.Specialist]: 'Specialist',\n}\n","import { Genres } from '@constants/Genres'\nimport channelList from './channelList.json'\n\nexport interface Channel {\n  sid: string\n  channelNumber: string\n  name: string\n  /**\n   * `sd` - Standard Definition\n   * `hd` - High\n   * `au` - Audio only\n   */\n  quality: 'sd' | 'hd' | 'au'\n  genre: Genres\n}\n\n/**\n * @param genre Optional genre(s) to filter by\n */\nexport function isValidChannelNumber(channelNumber: string, genre?: Genres | Genres[]) {\n  return getAllChannelNumbersArray(genre).includes(channelNumber)\n}\n\n/**\n * @param genre Optional genre(s) to filter by\n */\nexport function getAllChannels(genre?: Genres | Genres[]): Record<string, Channel> {\n  const channels = channelList as Record<string, Channel>\n\n  if (genre !== undefined && genre !== null) {\n    const allKeys = Object.keys(channels)\n    let output: Record<string, Channel> = {}\n\n    if (Array.isArray(genre)) {\n      const outputChannelKeys = allKeys.filter(k => genre.includes(channels[k].genre))\n\n      outputChannelKeys.forEach(k => (output[k] = channels[k]))\n    } else {\n      const outputChannelKeys = allKeys.filter(k => channels[k].genre === genre)\n\n      outputChannelKeys.forEach(k => (output[k] = channels[k]))\n    }\n\n    return output\n  }\n\n  return channels\n}\n\n/**\n * @param genre Optional genre(s) to filter by\n */\nexport function getAllChannelsArray(genre?: Genres | Genres[]): Channel[] {\n  return Object.values(getAllChannels(genre))\n}\n\n/**\n * @param genre Optional genre(s) to filter by\n */\nexport function getAllChannelNumbersArray(genre?: Genres | Genres[]): string[] {\n  return Object.keys(getAllChannels(genre))\n}\n\n/**\n * @param genre Optional genre(s) to filter by\n */\nexport function getFirstChannelNumber(genre?: Genres | Genres[]): string | null {\n  const array = getAllChannelsArray(genre)\n\n  if (array?.length) {\n    return array[0].channelNumber\n  } else {\n    return null\n  }\n}\n\nexport function getChannelByChannelNumber(channelNumber: string): Channel | null {\n  return channelList[channelNumber] || null\n}\n\n/**\n * @param genre Optional genre(s) to filter by\n */\nexport function getChannelBySID(sid: string, genre?: Genres | Genres[]): Channel | null {\n  return getAllChannelsArray(genre).find(channel => channel.sid === sid) || null\n}\n\n/**\n * @param genre Optional genre(s) to filter by\n */\nexport function getNChannelsFromNumber(channelNumber: string, n: number, genre?: Genres | Genres[]): Channel[] | null {\n  const startIndex = getAllChannelNumbersArray(genre).indexOf(channelNumber)\n\n  if (startIndex === -1) return null\n\n  return getAllChannelsArray(genre).slice(startIndex, startIndex + n) as Channel[]\n}\n\n/**\n * @param genre Optional genre(s) to filter by\n */\nexport function getChannelNumberFromNumberPlusN(channelNumber: string, n: number, genre?: Genres | Genres[]): string {\n  const channelNumbers = getAllChannelNumbersArray(genre)\n\n  const startIndex = channelNumbers.indexOf(channelNumber)\n  const result = channelNumbers[Math.min(Math.max(startIndex + n, 0), channelNumbers.length - 1)]\n\n  return result\n}\n\n/**\n * Supports negative indexes for back-to-front lookup.\n *\n * `index: -1` will return the LAST channel.\n *\n * @param genre Optional genre(s) to filter by\n */\nexport function getChannelAtIndex(index: number, genre?: Genres | Genres[]) {\n  const channelNumbers = getAllChannelNumbersArray(genre)\n\n  // If the index is too high, just take the last channel\n  if (index >= channelNumbers.length) {\n    index = channelNumbers.length - 1\n  }\n  // If the index is too low, just take the first channel\n  else if (index <= -channelNumbers.length) {\n    index = 0\n  }\n\n  if (index >= 0) {\n    return getChannelByChannelNumber(channelNumbers[index])\n  } else {\n    return getChannelByChannelNumber(channelNumbers[channelNumbers.length + index])\n  }\n}\n"],"names":["ErrorCodes","ErrorText","NO_CARD_INSERTED","NO_SATELLITE_SIGNAL","NO_SATELLITE_SIGNAL_2","useStyles","makeStyles","messageBox","width","overflow","maxHeight","messageBoxWider","messageBoxHorizCenter","margin","messageBoxHeader","background","Colors","color","textTransform","lineHeight","fontSize","textAlign","position","fontFamily","fontStretch","fontWeight","letterSpacing","messageBoxErrorCode","right","messageBoxContent","display","flexDirection","justifyContent","padding","paddingBottom","minHeight","messageBoxFooter","title","errorCode","children","customControlData","text","control","controlPrompt","controlPromptAction","onControlPressed","wider","horizontallyCentered","className","classes","setControlsState","useSetRecoilState","controlsState","controlsShownStateSetter","useEffect","backUpEventListener","e","detail","stopImmediatePropagation","document","addEventListener","removeEventListener","role","clsx","String","padStart","ControlText","Genres","GenreName","SkySpecialChannels","Shopping","Kids","Entertainment","Radio","News","Movies","Sports","LifestyleAndCulture","Adult","GamingAndDating","Documentaries","Music","Religion","International","Specialist","getAllChannels","genre","channels","channelList","allKeys","Object","keys","output","Array","isArray","filter","k","includes","forEach","getAllChannelsArray","values","getAllChannelNumbersArray","getFirstChannelNumber","array","length","channelNumber","getChannelByChannelNumber","getNChannelsFromNumber","n","startIndex","indexOf","slice","getChannelNumberFromNumberPlusN","channelNumbers","Math","min","max","getChannelAtIndex","index"],"sourceRoot":""}