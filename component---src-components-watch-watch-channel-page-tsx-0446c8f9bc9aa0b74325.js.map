{"version":3,"file":"component---src-components-watch-watch-channel-page-tsx-0446c8f9bc9aa0b74325.js","mappings":"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","sources":["webpack://sky-plus-epg-simulator/./src/components/ControlVisualisers/ControlArrows.tsx","webpack://sky-plus-epg-simulator/./src/data/ErrorCodes.tsx","webpack://sky-plus-epg-simulator/./src/components/ErrorMessage.tsx","webpack://sky-plus-epg-simulator/./src/components/FullScreenError.tsx","webpack://sky-plus-epg-simulator/./src/components/Watch/SearchAndScan.tsx","webpack://sky-plus-epg-simulator/./src/components/Watch/WatchChannelPage.tsx","webpack://sky-plus-epg-simulator/./src/data/getEpg.ts","webpack://sky-plus-epg-simulator/./src/helpers/controlsShownStateSetter.ts","webpack://sky-plus-epg-simulator/./src/assets/images/sharing-image.jpg","webpack://sky-plus-epg-simulator/./src/components/SEO.tsx","webpack://sky-plus-epg-simulator/./src/layouts/InnerLayout.tsx","webpack://sky-plus-epg-simulator/./src/assets/icons/list-arrow.inline.svg"],"sourcesContent":["import ArrowSvg from '@assets/icons/list-arrow.inline.svg'\nimport Colors from '@data/Colors'\nimport { makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\nimport React from 'react'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-flex',\n    background: Colors.main,\n    padding: 0,\n    fontFamily: 'ZurichBT',\n    fontWeight: 'bold',\n    fontSize: 18,\n    verticalAlign: 'middle',\n    transform: 'translateY(-0.1em)',\n  },\n  vertical: {\n    flexDirection: 'column',\n\n    '& > svg': {\n      height: '0.6em',\n\n      '&:first-child': {\n        transformOrigin: 'center',\n        transform: 'rotate(0.5turn)',\n        marginBottom: 2,\n      },\n      '&:last-child': {},\n    },\n  },\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: '1.3em',\n\n    '& > svg': {\n      height: '0.6em',\n      transformOrigin: 'center',\n\n      '&:first-child': {\n        transform: 'rotate(90deg)',\n        marginLeft: '-0.25em',\n      },\n      '&:last-child': {\n        transform: 'rotate(-90deg)',\n        marginLeft: '-0.45em',\n        marginRight: '-0.25em',\n      },\n    },\n  },\n})\n\ninterface Props {\n  className?: string\n  variant: 'vertical' | 'horizontal'\n}\n\nexport default function ControlArrows({ className, variant }: Props) {\n  const classes = useStyles()\n\n  return (\n    <span\n      className={clsx(classes.root, className, { [classes.vertical]: variant === 'vertical', [classes.horizontal]: variant === 'horizontal' })}\n    >\n      <ArrowSvg />\n      <ArrowSvg />\n    </span>\n  )\n}\n","import React from 'react'\n\n/**\n * List of known Sky error codes.\n *\n * Not complete at all.\n */\nenum ErrorCodes {\n  NO_CARD_INSERTED = 1,\n  CARD_READ_ERROR = 2,\n  CARD_CHECK_FAIL = 3,\n  UNAUTHORISED_CARD = 6,\n  /**\n   * CP01 on Sky+HD R010 and newer\n   */\n  UNPAIRED_CARD = 7,\n  ENCRYPTION_KEY_FAILURE = 8,\n  UNAUTHORISED_CARD_2 = 9,\n  NO_SATELLITE_SIGNAL = 28,\n  NO_SATELLITE_SIGNAL_2 = 29,\n}\n\nexport const ErrorText = {\n  [ErrorCodes.NO_CARD_INSERTED]: <>Insert your Sky viewing card</>,\n  [ErrorCodes.NO_SATELLITE_SIGNAL]: (\n    <>\n      No Satellite Signal is being received.\n      <br />\n      Please unplug your box from the mains, then plug it back in and wait 5 minutes before trying again.\n      <br />\n      If the fault persists, contact customer services.\n    </>\n  ),\n  [ErrorCodes.NO_SATELLITE_SIGNAL_2]: (\n    <>\n      No Satellite Signal is being received.\n      <br />\n      Please unplug your box from the mains, then plug it back in and wait 5 minutes before trying again.\n      <br />\n      If the fault persists, contact customer services.\n    </>\n  ),\n} as const\n\nexport default ErrorCodes\n","import { controlsState as controlsStateAtom } from '@atoms'\nimport Colors from '@data/Colors'\nimport ErrorCodes, { ErrorText } from '@data/ErrorCodes'\nimport controlsShownStateSetter from '@helpers/controlsShownStateSetter'\nimport { makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\nimport React, { useEffect } from 'react'\nimport { useRecoilState } from 'recoil'\nimport ControlText from './ControlVisualisers/ControlText'\n\nconst useStyles = makeStyles({\n  messageBox: {\n    width: '80%',\n    overflow: 'hidden',\n    maxHeight: '80%',\n  },\n  messageBoxWider: {\n    width: '92%',\n  },\n  messageBoxHorizCenter: {\n    margin: 'auto',\n  },\n  messageBoxHeader: {\n    background: Colors.yellowMain,\n    color: Colors.main,\n    textTransform: 'uppercase',\n    lineHeight: '29px',\n    fontSize: 24,\n    textAlign: 'center',\n    position: 'relative',\n\n    fontFamily: 'Zurich',\n    fontStretch: 'expanded',\n    fontWeight: 700,\n    letterSpacing: 0.4,\n  },\n  messageBoxErrorCode: {\n    position: 'absolute',\n    right: 4,\n  },\n  messageBoxContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: 4,\n    paddingBottom: 1,\n    fontFamily: 'ZurichBT',\n    fontWeight: 400,\n    background: Colors.mainLight,\n    color: Colors.mainText,\n    fontSize: 25,\n    textAlign: 'center',\n    letterSpacing: 0.5,\n    lineHeight: '32px',\n    minHeight: 32 * 4 + 4 + 4,\n  },\n  messageBoxFooter: {\n    color: Colors.yellowText,\n    paddingBottom: 1,\n  },\n})\n\nexport interface ErrorMessageProps {\n  /**\n   * Error message title\n   *\n   * @default \"For your information\"\n   */\n  title?: string\n  /**\n   * Error message number\n   *\n   * @default 28\n   */\n  errorCode?: number | null\n  /**\n   * Error message content\n   *\n   * @default \"No Satellite Signal is being received. [...]\"\n   */\n  children?: React.ReactNode\n  /**\n   * Whether to show the Back Up prompt or not\n   *\n   * @default false\n   */\n  controlPrompt?: boolean\n  /**\n   * Custom Back Up prompt action text.\n   *\n   * Results in: `Press BACK UP to <text here>`\n   */\n  controlPromptAction?: string\n  onControlPressed?: () => void\n  /**\n   * Info to be used to choose a custom control to watch for.\n   *\n   * `text` is shown as part of the `controlPrompt`, and `control` is used for the event listener.\n   */\n  customControlData?: {\n    text: string\n    control: SkyControl\n  }\n  /**\n   * Use the wider variant of error message. This is used when the error message is shown within the EPG itself.\n   */\n  wider?: boolean\n  /**\n   * Horizontally center the message box within the parent container.\n   *\n   * (Applies `margin: auto`.)\n   */\n  horizontallyCentered?: boolean\n  /**\n   * Classes to apply to the message box's root node.\n   */\n  className?: string\n}\n\n/**\n * Displays a Sky-themed error message.\n *\n * Defaults to a No Satellite error.\n *\n * Title is almost always \"FOR YOUR INFORMATION\" on a real box.\n */\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({\n  title = 'For your information',\n  errorCode = ErrorCodes.NO_SATELLITE_SIGNAL,\n  children = ErrorText[ErrorCodes.NO_SATELLITE_SIGNAL],\n  customControlData = { text: 'BACK UP', control: 'backUp' },\n  controlPrompt = false,\n  controlPromptAction = 'return',\n  onControlPressed = () => {},\n  wider = false,\n  horizontallyCentered = false,\n  className,\n}) => {\n  const classes = useStyles()\n  const [controlsState, setControlsState] = useRecoilState(controlsStateAtom)\n  const wasBackupShown = controlsState.backUp\n\n  if (controlPrompt && !controlsState.backUp) {\n    setControlsState(controlsShownStateSetter('backUp', true))\n  }\n\n  useEffect(() => {\n    if (controlPrompt) {\n      function backUpEventListener(e: SkyControlPressedEvent) {\n        if (e.detail.control === customControlData.control) {\n          e.stopImmediatePropagation()\n          onControlPressed()\n        }\n      }\n\n      document.addEventListener('skyControlPressed', backUpEventListener)\n\n      return () => {\n        document.removeEventListener('skyControlPressed', backUpEventListener)\n        !wasBackupShown && setControlsState(controlsShownStateSetter('backUp', false))\n      }\n    }\n  })\n\n  return (\n    <section\n      role=\"alert\"\n      className={clsx(classes.messageBox, wider && classes.messageBoxWider, horizontallyCentered && classes.messageBoxHorizCenter, className)}\n    >\n      <header className={classes.messageBoxHeader}>\n        {title}\n        <span className={classes.messageBoxErrorCode}>\n          {errorCode !== null && typeof errorCode !== 'undefined' && String(errorCode).padStart(2, '0')}\n        </span>\n      </header>\n      <article className={classes.messageBoxContent}>\n        {children}\n        {controlPrompt && (\n          <footer className={classes.messageBoxFooter}>\n            Press <ControlText>{customControlData.text}</ControlText> to {controlPromptAction}\n          </footer>\n        )}\n      </article>\n    </section>\n  )\n}\n\nexport default ErrorMessage\n","import Colors from '@data/Colors'\nimport { makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport ErrorMessage, { ErrorMessageProps } from './ErrorMessage'\n\nconst useStyles = makeStyles({\n  root: {\n    background: Colors.accent,\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  messageBox: {\n    width: '80%',\n    overflow: 'hidden',\n    maxHeight: '80%',\n  },\n  messageBoxHeader: {\n    background: Colors.yellowMain,\n    color: Colors.main,\n    textTransform: 'uppercase',\n    lineHeight: '29px',\n    fontSize: 24,\n    textAlign: 'center',\n    position: 'relative',\n  },\n  messageBoxErrorCode: {\n    position: 'absolute',\n    right: 4,\n  },\n  messageBoxContent: {\n    padding: 4,\n    paddingBottom: 0,\n    fontFamily: 'ZurichBT',\n    background: Colors.mainLight,\n    color: Colors.mainText,\n    fontSize: 25,\n    textAlign: 'center',\n    letterSpacing: 0.5,\n    lineHeight: '32px',\n  },\n})\n\n/**\n * Displays a full-screen Sky error message using the props provided.\n */\nconst FullScreenError = ({ ...props }: ErrorMessageProps) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <ErrorMessage {...props} />\n    </div>\n  )\n}\n\nexport default FullScreenError\n","import { timeState } from '@atoms/timeState'\nimport ColorButton from '@components/ControlVisualisers/ColorButton'\nimport ControlArrows from '@components/ControlVisualisers/ControlArrows'\nimport Colors from '@data/Colors'\nimport type { Channel } from '@data/epg/AllChannels'\nimport getProgrammeListingForSID, { Programme } from '@data/getEpg'\nimport { makeStyles } from '@material-ui/core'\nimport dayjs from 'dayjs'\nimport React, { useEffect, useState } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport dayjsUtc from 'dayjs/plugin/utc'\nimport dayjsTz from 'dayjs/plugin/timezone'\n\ndayjs.extend(dayjsUtc)\ndayjs.extend(dayjsTz)\n\ninterface Props {\n  channel: Channel\n}\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    zIndex: 100,\n    width: '80%',\n    bottom: 48,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    background: '#fff',\n  },\n  header: {\n    color: Colors.main,\n    fontFamily: 'Zurich',\n    fontSize: 22,\n    padding: '0 4px',\n    paddingLeft: 6,\n    display: 'flex',\n    borderBottom: `4px solid ${Colors.mainFadedText}`,\n    height: 32,\n  },\n  headerTime: {\n    marginLeft: 'auto',\n    color: Colors.mainFadedText,\n  },\n  main: {\n    padding: '4px 0',\n    paddingLeft: 48,\n    background: Colors.mainFaded,\n    fontSize: 22,\n    height: '2.75em',\n    display: 'grid',\n    gridTemplateColumns: '18fr 82fr',\n    gridTemplateRows: '1fr 1fr',\n    fontFamily: 'ZurichBT',\n    gap: 6,\n    lineHeight: 1,\n    '& > *': {\n      '&': {\n        textOverflow: 'ellipsis',\n      },\n      'text-overflow': '\"..\"',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n    },\n  },\n  footer: {\n    color: Colors.main,\n    fontFamily: 'Zurich',\n    fontSize: 22,\n    borderTop: `4px solid ${Colors.mainFadedText}`,\n    display: 'grid',\n    gridTemplateColumns: 'repeat(4, 1fr)',\n    height: 32,\n    paddingLeft: 6,\n    alignItems: 'end',\n  },\n  controlArrow: {\n    fontSize: 22,\n    position: 'absolute',\n    transform: 'translateY(0.5px)',\n\n    '& + span': {\n      marginLeft: '1.7em',\n    },\n  },\n  footerSection: {\n    position: 'relative',\n    maxHeight: '100%',\n\n    '& > $footerLabel': {\n      display: 'inline-block',\n      transform: 'translateY(-2px)',\n    },\n  },\n  footerLabel: {},\n  now: {\n    color: '#fff',\n  },\n  later: {\n    color: Colors.mainFadedText,\n  },\n  noInfo: {\n    color: Colors.yellowText,\n    gridColumn: '1 / span 2',\n  },\n})\n\nexport default function SearchAndScan({ channel }: Props) {\n  const classes = useStyles()\n  const { time } = useRecoilValue(timeState)\n  const [programmeInfo, setProgrammeInfo] = useState<null | false | Programme[]>(null)\n\n  useEffect(() => {\n    const abortController = new AbortController()\n\n    if (programmeInfo === null) {\n      getProgrammeListingForSID(channel.sid, { abortController })\n        .then(listing => {\n          const currentProgrammeIndex = listing.schedule.findIndex(\n            programme =>\n              programme.startTime <= time.toDate().getTime() && programme.startTime + programme.duration * 1000 >= time.toDate().getTime(),\n          )\n\n          if (currentProgrammeIndex === -1) {\n            setProgrammeInfo(false)\n          } else {\n            setProgrammeInfo([listing.schedule[currentProgrammeIndex], listing.schedule?.[currentProgrammeIndex + 1]].filter(Boolean))\n          }\n        })\n        .catch(e => {\n          if (e.name === 'AbortError') return\n\n          console.error(e)\n        })\n    }\n\n    return () => {\n      abortController.abort()\n    }\n  })\n\n  const noInfoMessage = <span className={classes.noInfo}>Further schedule information is not available</span>\n\n  return (\n    <aside className={classes.root}>\n      <div className={classes.header}>\n        <span style={{ width: `${channel.channelNumber.length + 0.5}ch` }}>{channel.channelNumber}</span>\n        <span>{channel.name}</span>\n        <span className={classes.headerTime}>{time.format('h.mma ddd D MMM')}</span>\n      </div>\n      <div className={classes.main}>\n        {programmeInfo?.[0] && (\n          <>\n            <span className={classes.now}>NOW</span>\n            <span className={classes.now}>{(programmeInfo[0] as Programme).title}</span>\n          </>\n        )}\n        {programmeInfo?.[1] ? (\n          <>\n            <span className={classes.later}>{dayjs(programmeInfo[1].startTime).tz('Europe/London').format('h.mma')}</span>\n            <span className={classes.later}>{(programmeInfo[1] as Programme).title}</span>\n          </>\n        ) : (\n          noInfoMessage\n        )}\n        {programmeInfo === false && noInfoMessage}\n      </div>\n      <div className={classes.footer}>\n        <div className={classes.footerSection}>\n          <ControlArrows className={classes.controlArrow} variant=\"horizontal\" />\n          <span className={classes.footerLabel}>Time</span>\n        </div>\n        <div className={classes.footerSection}>\n          <ControlArrows className={classes.controlArrow} variant=\"vertical\" />\n          <span className={classes.footerLabel}>Channel</span>\n        </div>\n        <div className={classes.footerSection}>\n          <ColorButton buttonColor=\"yellow\" />\n          <span className={classes.footerLabel}>Messages</span>\n        </div>\n        <div className={classes.footerSection}>\n          <ColorButton buttonColor=\"blue\" />\n          <span className={classes.footerLabel}>Favourite</span>\n        </div>\n      </div>\n    </aside>\n  )\n}\n","import { controlsState, tvLicenseState } from '@atoms'\nimport FullScreenError from '@components/FullScreenError'\nimport type { Channel } from '@data/epg/AllChannels'\nimport type { Stream } from '@data/epg/streams/Streams'\nimport controlsShownStateSetter from '@helpers/controlsShownStateSetter'\nimport InnerLayout from '@layouts/InnerLayout'\nimport { Button, makeStyles } from '@material-ui/core'\nimport { navigate, PageProps } from 'gatsby'\nimport type Hls from 'hls.js'\nimport { useSnackbar } from 'notistack'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport SearchAndScan from './SearchAndScan'\n\ntype Props = PageProps<object, { channel: Channel; streamData: Stream }>\n\nconst useStyles = makeStyles({\n  root: {\n    background: '#000',\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n  },\n})\n\nconst WatchChannelPage: React.FC<Props> = ({ pageContext: { channel, streamData } }) => {\n  const classes = useStyles()\n  const [controlsVisible, setControlsVisible] = useRecoilState(controlsState)\n  const tvLicenseStateValue = useRecoilValue(tvLicenseState)\n  const [pageState, setPageState] = useState({\n    error: false,\n  })\n  const videoRef = useRef(null)\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n\n  function goBack(e: SkyControlPressedEvent) {\n    const control = e.detail.control\n\n    if (['backUp'].includes(control)) {\n      navigate('/', { state: { selectedTab: 'GUIDE' } })\n    }\n  }\n\n  if (!controlsVisible.backUp) setControlsVisible(controlsShownStateSetter(['backUp'], true))\n\n  useEffect(() => {\n    document.addEventListener('skyControlPressed', goBack)\n    window.__bgAudio.pause()\n\n    let hls: Hls\n\n    if (tvLicenseStateValue.hasTvLicense) {\n      if (videoRef.current) {\n        if (!window.Hls.isSupported() && !pageState.error) {\n          setPageState(s => ({ ...s, error: true }))\n        }\n\n        hls = new window.Hls({ debug: true })\n        hls.loadSource(streamData.streamUrl)\n        hls.attachMedia(videoRef.current)\n\n        hls.on(window.Hls.Events.ERROR, (_, e) => {\n          console.warn(e)\n\n          switch (e.type) {\n            case 'networkError':\n              setPageState(s => ({ ...s, error: true }))\n              break\n          }\n        })\n\n        hls.on(window.Hls.Events.MEDIA_ATTACHED, () => {\n          videoRef.current.play().catch((e: Error) => {\n            console.warn(e)\n\n            enqueueSnackbar('TV stream is paused', {\n              variant: 'warning',\n              persist: true,\n              key: 'STREAM_PAUSED',\n              action: key => (\n                <Button\n                  onClick={() => {\n                    videoRef.current.play()\n                    closeSnackbar(key)\n                  }}\n                >\n                  Resume stream\n                </Button>\n              ),\n            })\n          })\n        })\n      }\n    }\n\n    return () => {\n      document.removeEventListener('skyControlPressed', goBack)\n      if (controlsVisible.backUp) setControlsVisible(controlsShownStateSetter(['backUp'], false))\n\n      if (hls) {\n        hls.destroy()\n      }\n\n      closeSnackbar('STREAM_PAUSED')\n    }\n  })\n\n  return (\n    <InnerLayout>\n      <div className={classes.root}>\n        {tvLicenseStateValue.hasTvLicense && !pageState.error && <video ref={videoRef} className={classes.video} />}\n        {tvLicenseStateValue.hasTvLicense && pageState.error && (\n          <FullScreenError errorCode={30}>\n            <br />\n            There is a technical fault with this channel\n            <br />\n            Please try again later\n          </FullScreenError>\n        )}\n\n        {tvLicenseStateValue.hasOptedOutOfTvLicenseContent && (\n          <FullScreenError errorCode={null} controlPrompt controlPromptAction=\"return\">\n            <br />\n            This content is only available to TV Licensees\n          </FullScreenError>\n        )}\n\n        <SearchAndScan channel={channel} />\n      </div>\n    </InnerLayout>\n  )\n}\n\nexport default WatchChannelPage\n","import dayjs from 'dayjs'\nimport dayjsUtc from 'dayjs/plugin/utc'\nimport dayjsTz from 'dayjs/plugin/timezone'\n\ndayjs.extend(dayjsUtc)\ndayjs.extend(dayjsTz)\n\nexport interface EPGChannelListing {\n  /**\n   * YYYYMMDD\n   */\n  date: string\n  schedule: Programme[]\n}\n\nexport interface Programme {\n  /**\n   * The start time of the programme as a Unix timestamp (milliseconds since epoch).\n   *\n   * Original: `st`. Original in seconds since epoch.\n   */\n  startTime: number\n  /**\n   * Duration of the show in seconds. (e.g. 3600 = 1 hour)\n   *\n   * Original: `d`\n   */\n  duration: number\n  /**\n   * ID for this event.\n   *\n   * Original: `eid`\n   */\n  eventId: string\n  /**\n   * Unique ID for this programme.\n   *\n   * Original: `programmeuuid`\n   */\n  programmeUuid: string | undefined\n  /**\n   * Programme season number.\n   *\n   * Defaults to `1` if not part of a series.\n   *\n   * Original: `seasonnumber`\n   */\n  seasonNumber: number | undefined\n  /**\n   * Programme episode number.\n   *\n   * Defaults to `1` if not part of a series.\n   *\n   * Original: `episodenumber`\n   */\n  episodeNumber: number | undefined\n  /**\n   * Unique ID for this programme's season.\n   *\n   * Original: `seasonuuid`\n   */\n  seasonUuid: string | undefined\n  /**\n   * Unique ID for this programme's series. (All seasons and eps.)\n   *\n   * Original: `seriesuuid`\n   */\n  seriesUuid: string | undefined\n  /**\n   * Whether the programme has children\n   *\n   * Original: `haschildren`\n   */\n  hasChildren: boolean\n  /**\n   * Programme title\n   *\n   * Original: `t`\n   */\n  title: string\n  /**\n   * Programme description\n   *\n   * Original: `sy`\n   */\n  synopsis: string\n  /**\n   * Unknown\n   *\n   * Original: `eg`\n   */\n  eg: number\n  /**\n   * Unknown\n   *\n   * Original: `esg`\n   */\n  esg: number\n  /**\n   * Unknown\n   *\n   * Original: `tso`\n   */\n  tso: number\n  /**\n   * Programme rating\n   *\n   * Original: `r`\n   */\n  rating: '--' | 'U' | 'PG' | '12' | '15' | '18' | 'R' | 'R+'\n  /**\n   * Audio technology for the programme.\n   *\n   * M for mono. S for stereo. DD for Dolby Digital.\n   *\n   * Original: `at`\n   */\n  audioTechnology: 'M' | 'S' | 'DD'\n  /**\n   * Original: `s`\n   */\n  hasSubtitles: boolean\n  /**\n   * Original: `ad`\n   */\n  hasAudioDescription: boolean\n  /**\n   * Original: `hd`\n   */\n  isHd: boolean\n  /**\n   * Is the programme new.\n   *\n   * Original: `new`\n   */\n  isNew: boolean\n  /**\n   * Can record as series link.\n   *\n   * Original: `canl`\n   */\n  canSeriesLink: boolean\n  /**\n   * Can record this programme (book planner entry).\n   *\n   * Original: `canb`\n   */\n  canBookRecording: boolean\n  /**\n   * If the show has alternative audio.\n   *\n   * Original: `hasAlternativeAudio`\n   */\n  hasAlternativeAudio: boolean\n  /**\n   * Can the programme be started from the beginning.\n   *\n   * Original: `restartable`\n   */\n  isRestartable: boolean\n  /**\n   * Unknown\n   *\n   * Original: `slo`\n   */\n  slo: boolean\n  /**\n   * Unknown\n   *\n   * Original: `w`\n   */\n  w: boolean\n  /**\n   * Impulse pay-per-view\n   *\n   * Original: `ippv`\n   */\n  ippv: boolean\n  /**\n   * Order-ahead pay-per-view\n   *\n   * Original: `oppv`\n   */\n  oppv: boolean\n  /**\n   * Only on Box Office programmes.\n   *\n   * Original: `marketingmessage`\n   */\n  marketingMessage?: string\n  /**\n   * Channel genre that this programme's channel is in.\n   *\n   * Original: `cgid`\n   */\n  channelGenreId: number\n}\n\nconst EPG_API_URL = 'https://awk.epgsky.com/hawk/linear/schedule'\n\n/**\n * Gets EPG schedule for a specified channel and date.\n *\n * Date, if unspecified, is today.\n *\n * **Example SIDs:**\n * - BBC One HD = `2076`\n * - BBC News = `2085`\n * - Sky Intro = `1819`\n *\n * @param channelSid Channel SID\n * @param date Date (YYYYMMDD)\n */\nexport default async function getProgrammeListingForSID(\n  channelSid: string,\n  { date, abortController }: Partial<{ date: string; abortController: AbortController }> = {},\n): Promise<EPGChannelListing> {\n  let realDate: string\n\n  if (!date) {\n    realDate = dayjs().tz('Europe/London').format('YYYYMMDD')\n  } else {\n    realDate = dayjs(date).tz('Europe/London').format('YYYYMMDD')\n  }\n\n  const jsonData = await (await fetch(`${EPG_API_URL}/${realDate}/${channelSid}`, { signal: abortController.signal })).json()\n\n  const events = jsonData.schedule[0].events as Record<string, any>[]\n\n  const response: EPGChannelListing = {\n    date: jsonData.date,\n    schedule: events.map(\n      (event): Programme => ({\n        startTime: event.st * 1000,\n        duration: event.d,\n        eventId: event.eid,\n        channelGenreId: event.cgid,\n        programmeUuid: event.programmeuuid,\n        seasonNumber: event.seasonnumber,\n        episodeNumber: event.episodenumber,\n        seasonUuid: event.seasonuuid,\n        seriesUuid: event.seriesuuid,\n        hasChildren: event.haschildren,\n        title: event.t,\n        synopsis: event.sy,\n        eg: event.eg,\n        esg: event.esg,\n        tso: event.tso,\n        rating: event.r,\n        audioTechnology: event.at,\n        hasSubtitles: event.s,\n        hasAudioDescription: event.ad,\n        isHd: event.hd,\n        isNew: event.new,\n        canSeriesLink: event.canl,\n        canBookRecording: event.canb,\n        hasAlternativeAudio: event.hasAlternativeAudio,\n        isRestartable: event.restartable,\n        slo: event.slo,\n        w: event.w,\n        ippv: event.ippv,\n        oppv: event.oppv,\n      }),\n    ),\n  }\n\n  return response\n}\n","/**\n * Returns a set state function to be passed into `useSetRecoilState`.\n *\n * If `isShown` is not provided, the control will be toggled.\n *\n * @example <caption>Shows the back up button</caption>\n * useSetRecoilState(controlsState)(controlsShownStateSetter('backUp', true))\n *\n * @param controlName Name of array of names for the control(s) to show/hide/toggle\n * @param isShown (optional) Whether it/they should be shown or not\n * @returns Recoil setState handler function to set the visibility of this control\n */\nexport default function controlsShownStateSetter(controls: SkyControl | SkyControl[], isShown?: boolean) {\n  const controlName = Array.isArray(controls) ? controls : [controls]\n\n  return controlsRaw => {\n    let controls = { ...controlsRaw }\n\n    controlName.forEach(control => {\n      if (Object.keys(controls).includes(control)) {\n        controls[control] = typeof isShown !== 'boolean' ? !controls[control] : isShown\n      } else {\n        throw `Invalid control provided to \\`controlsShownStateSetter\\`: \"${control}\".`\n      }\n    })\n\n    return controls\n  }\n}\n","export default __webpack_public_path__ + \"static/sharing-image-db5dc5b9424e9194bebb470cf9c6e978.jpg\";","import SharingImageUrl from '@assets/images/sharing-image.jpg'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport { Link, Meta, Title } from 'react-head'\n\ntype MetaEntry = {\n  name: string\n  content: string\n}\n\ninterface Props {\n  description?: string\n  meta?: MetaEntry[]\n  title: string\n}\n\nconst SEO: React.FC<Props> = ({ description, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const realTitle = title ? `${title} | ${site.siteMetadata.title}` : site.siteMetadata.title\n\n  return (\n    <>\n      <Title>{realTitle}</Title>\n      <Meta name=\"description\" content={metaDescription} />\n\n      <Meta name=\"og:locale\" content=\"en_GB\" />\n      <Meta name=\"og:title\" content={realTitle} />\n      <Meta name=\"og:description\" content={metaDescription} />\n      <Meta name=\"og:type\" content=\"website\" />\n      <Meta name=\"og:image\" content={SharingImageUrl} />\n\n      <Meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <Meta name=\"twitter:title\" content={realTitle} />\n      <Meta name=\"twitter:description\" content={metaDescription} />\n      <Meta name=\"twitter:creator\" content=\"@davwheat\" />\n      <Meta name=\"twitter:site\" content=\"@davwheat\" />\n      <Meta name=\"twitter:image\" content={SharingImageUrl} />\n      <Meta name=\"twitter:image:alt\" content=\"Screenshot of the Sky+ Web EPG.\" />\n\n      {/* Establish connection to Sky's EPG API */}\n      <Link rel=\"preconnect\" href=\"https://awk.epgsky.com/\" />\n\n      {meta && meta.map((m, i) => <Meta key={`${m.name}--${i}`} name={m.name} content={m.content} />)}\n    </>\n  )\n}\n\nexport default SEO\n","import SEO from '@components/SEO'\nimport React from 'react'\n\ninterface Props {\n  title?: string\n  description?: string\n  children: React.ReactNode\n}\n\nconst InnerLayout: React.FC<Props> = ({ title, description, children }) => {\n  return (\n    <>\n      <SEO title={title} description={description} />\n      {children}\n    </>\n  )\n}\n\nexport default InnerLayout\n","var React = require('react');\n\nfunction ListArrowInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fill\":\"#eec401\",\"d\":\"M0 0l.2.2L11 10.9 21.7 0h-7.5L11 3.4 7.5 0z\"}));\n}\n\nListArrowInline.defaultProps = {\"viewBox\":\"0 0 21.7 10.9\"};\n\nmodule.exports = ListArrowInline;\n\nListArrowInline.default = ListArrowInline;\n"],"names":["useStyles","makeStyles","root","display","background","Colors","padding","fontFamily","fontWeight","fontSize","verticalAlign","transform","vertical","flexDirection","height","transformOrigin","marginBottom","horizontal","alignItems","marginLeft","marginRight","ControlArrows","className","variant","classes","clsx","ErrorCodes","ErrorText","NO_CARD_INSERTED","NO_SATELLITE_SIGNAL","NO_SATELLITE_SIGNAL_2","messageBox","width","overflow","maxHeight","messageBoxWider","messageBoxHorizCenter","margin","messageBoxHeader","color","textTransform","lineHeight","textAlign","position","fontStretch","letterSpacing","messageBoxErrorCode","right","messageBoxContent","justifyContent","paddingBottom","minHeight","messageBoxFooter","title","errorCode","children","customControlData","text","control","controlPrompt","controlPromptAction","onControlPressed","wider","horizontallyCentered","useRecoilState","controlsStateAtom","controlsState","setControlsState","wasBackupShown","backUp","controlsShownStateSetter","useEffect","backUpEventListener","e","detail","stopImmediatePropagation","document","addEventListener","removeEventListener","role","String","padStart","ControlText","top","bottom","left","props","dayjs","dayjsUtc","dayjsTz","zIndex","header","paddingLeft","borderBottom","headerTime","main","gridTemplateColumns","gridTemplateRows","gap","textOverflow","whiteSpace","footer","borderTop","controlArrow","footerSection","footerLabel","now","later","noInfo","gridColumn","SearchAndScan","channel","time","useRecoilValue","timeState","useState","programmeInfo","setProgrammeInfo","abortController","AbortController","getProgrammeListingForSID","sid","then","listing","currentProgrammeIndex","schedule","findIndex","programme","startTime","toDate","getTime","duration","filter","Boolean","catch","name","console","error","abort","noInfoMessage","style","channelNumber","length","format","tz","ColorButton","buttonColor","video","pageContext","streamData","controlsVisible","setControlsVisible","tvLicenseStateValue","tvLicenseState","pageState","setPageState","videoRef","useRef","useSnackbar","enqueueSnackbar","closeSnackbar","goBack","includes","navigate","state","selectedTab","hls","window","__bgAudio","pause","hasTvLicense","current","Hls","isSupported","s","debug","loadSource","streamUrl","attachMedia","on","Events","ERROR","_","warn","type","MEDIA_ATTACHED","play","persist","key","action","Button","onClick","destroy","InnerLayout","ref","FullScreenError","hasOptedOutOfTvLicenseContent","EPG_API_URL","channelSid","date","realDate","fetch","signal","json","jsonData","events","response","map","event","st","d","eventId","eid","channelGenreId","cgid","programmeUuid","programmeuuid","seasonNumber","seasonnumber","episodeNumber","episodenumber","seasonUuid","seasonuuid","seriesUuid","seriesuuid","hasChildren","haschildren","t","synopsis","sy","eg","esg","tso","rating","r","audioTechnology","at","hasSubtitles","hasAudioDescription","ad","isHd","hd","isNew","new","canSeriesLink","canl","canBookRecording","canb","hasAlternativeAudio","isRestartable","restartable","slo","w","ippv","oppv","controls","isShown","controlName","Array","isArray","controlsRaw","forEach","Object","keys","description","meta","site","useStaticQuery","metaDescription","siteMetadata","realTitle","Title","Meta","content","SharingImageUrl","Link","rel","href","m","i","React","ListArrowInline","createElement","defaultProps","module","exports","default"],"sourceRoot":""}