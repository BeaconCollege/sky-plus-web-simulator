{"version":3,"sources":["webpack://sky-digibox-simulator/./src/components/epg/Menu.tsx","webpack://sky-digibox-simulator/./src/components/epg/pages/MainMenu.tsx","webpack://sky-digibox-simulator/./src/components/SEO.tsx","webpack://sky-digibox-simulator/./src/layouts/InnerLayout.tsx","webpack://sky-digibox-simulator/./src/pages/index.tsx"],"names":["COLORS","useStyles","makeStyles","root","width","margin","padding","display","flexDirection","gap","background","color","useItemStyles","cursor","paddingLeft","height","fontSize","alignItems","textTransform","counterIncrement","outline","alignSelf","textAlign","lineHeight","marginRight","content","MenuItem","text","onClick","classes","onKeyDown","e","key","target","click","tabIndex","className","listItems","listRef","useRef","useEffect","current","firstElementChild","focus","altKey","ctrlKey","metaKey","shiftKey","li","list","currentTarget","prev","previousElementSibling","elToFocus","lastElementChild","next","nextElementSibling","ref","clsx","map","item","MainMenuItems","alert","description","meta","title","site","useStaticQuery","metaDescription","siteMetadata","Title","Meta","name","m","i","children"],"mappings":"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","file":"component---src-pages-index-tsx-6d9d4fefeb878419058b.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core'\n\nconst COLORS = {\n  main: '#0025c9',\n  mainText: '#fff',\n  mainHover: '#fcda25',\n  mainTextHover: '#0000b3',\n\n  accent: '#001a8f',\n  accentText: '#7e7eff',\n  accentHover: '#fec200',\n  accentTextHover: '#0000b3',\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: 520,\n    margin: 'auto',\n    padding: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 4,\n\n    // Show the first list item as selected if no items have focus\n    '&:not(:focus-within)': {\n      '& li:first-child': {\n        background: COLORS.mainHover,\n        color: COLORS.mainTextHover,\n\n        '&::before': {\n          background: COLORS.accentHover,\n          color: COLORS.accentTextHover,\n        },\n      },\n    },\n  },\n})\n\nexport interface ListItem {\n  text: string\n  onClick?: React.MouseEventHandler<HTMLLIElement>\n}\n\ninterface ListProps {\n  listItems: ListItem[]\n}\n\nconst Menu: React.FC<ListProps> = ({ listItems }) => {\n  const classes = useStyles()\n  const listRef = useRef<HTMLOListElement>(null)\n\n  function HandleMenuNav(e: React.KeyboardEvent<HTMLOListElement>) {\n    // debugger\n\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return\n\n    const li = e.target as HTMLLIElement\n    const list = e.currentTarget as HTMLOListElement\n\n    if (e.key === 'ArrowUp') {\n      const prev = li.previousElementSibling as HTMLLIElement | null\n      let elToFocus = prev\n\n      if (!prev) {\n        // Top of list\n        // Wrap to bottom\n        elToFocus = list.lastElementChild as HTMLLIElement\n      }\n\n      elToFocus.focus()\n    } else if (e.key === 'ArrowDown') {\n      const next = li.nextElementSibling as HTMLLIElement | null\n      let elToFocus = next\n\n      if (!next) {\n        // Bottom of list\n        // Wrap to top\n        elToFocus = list.firstElementChild as HTMLLIElement\n      }\n\n      elToFocus.focus()\n    }\n  }\n\n  useEffect(() => {\n    if (listRef.current) {\n      const firstLi = listRef.current.firstElementChild as HTMLLIElement\n      firstLi.focus()\n    }\n  })\n\n  return (\n    <ol onKeyDown={HandleMenuNav} ref={listRef} className={clsx('thick-text', classes.root)}>\n      {listItems.map(item => (\n        <MenuItem key={item.text} {...item} />\n      ))}\n    </ol>\n  )\n}\n\nconst useItemStyles = makeStyles({\n  root: {\n    cursor: 'pointer',\n    paddingLeft: 4,\n    height: 32,\n    fontSize: 26,\n    display: 'flex',\n    alignItems: 'center',\n    background: COLORS.main,\n    color: COLORS.mainText,\n    textTransform: 'uppercase',\n    counterIncrement: 'menu',\n\n    outline: 'none',\n\n    '&::before': {\n      width: 80,\n      alignSelf: 'stretch',\n      textAlign: 'center',\n      lineHeight: '32px',\n      marginRight: 12,\n\n      background: COLORS.accent,\n      color: COLORS.accentText,\n\n      content: 'counter(menu)',\n      display: 'inline-block',\n    },\n\n    '&:hover, &:focus-visible': {\n      background: COLORS.mainHover,\n      color: COLORS.mainTextHover,\n\n      '&::before': {\n        background: COLORS.accentHover,\n        color: COLORS.accentTextHover,\n      },\n    },\n  },\n})\n\ntype ListItemProps = {} & ListItem\n\nconst MenuItem: React.FC<ListItemProps> = ({ text, onClick }) => {\n  const classes = useItemStyles()\n\n  function triggerClickOnEnter(e: React.KeyboardEvent<HTMLLIElement>) {\n    if (e.key === 'Enter') {\n      const li = e.target as HTMLLIElement\n      li.click()\n    }\n  }\n\n  return (\n    <li onKeyDown={triggerClickOnEnter} onClick={onClick} tabIndex={0} className={classes.root}>\n      {text}\n    </li>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport Menu from '../Menu'\n\nconst MainMenuItems = [\n  {\n    text: 'All Channels',\n    onClick: () => {},\n  },\n  {\n    text: 'Entertainment',\n    onClick: () => {},\n  },\n  {\n    text: 'Lifestyle & Culture',\n    onClick: () => {\n      alert('l&c')\n    },\n  },\n]\n\nconst MainMenu: React.FC = () => {\n  return (\n    <div>\n      <Menu listItems={MainMenuItems} />\n    </div>\n  )\n}\n\nexport default MainMenu\n","import React from 'react'\n\nimport { Title, Meta } from 'react-head'\nimport { useStaticQuery, graphql } from 'gatsby'\n\ntype MetaEntry = {\n  name: string\n  content: string\n}\n\ninterface Props {\n  description?: string\n  meta?: MetaEntry[]\n  title: string\n}\n\nconst SEO: React.FC<Props> = ({ description, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <>\n      <Title>{title ? `${title} | ${site.siteMetadata.title}` : site.siteMetadata.title}</Title>\n      <Meta name=\"description\" content={metaDescription} />\n\n      <Meta name=\"og:title\" content={title} />\n      <Meta name=\"og:description\" content={metaDescription} />\n      <Meta name=\"og:type\" content=\"website\" />\n\n      <Meta name=\"twitter:card\" content=\"summary\" />\n      <Meta name=\"twitter:title\" content={title} />\n      <Meta name=\"twitter:description\" content={metaDescription} />\n      <Meta name=\"twitter:creator\" content=\"@davwheat\" />\n\n      {meta && meta.map((m, i) => <Meta key={`${m.name}--${i}`} name={m.name} content={m.content} />)}\n    </>\n  )\n}\n\nexport default SEO\n","import React from 'react'\nimport SEO from '../components/SEO'\n\ninterface Props {\n  title?: string\n  description?: string\n  children: React.ReactNode\n}\n\nconst InnerLayout: React.FC<Props> = ({ title, description, children }) => {\n  return (\n    <>\n      <SEO title={title} description={description} />\n      {children}\n    </>\n  )\n}\n\nexport default InnerLayout\n","import React from 'react'\nimport MainMenu from '../components/epg/pages/MainMenu'\nimport InnerLayout from '../layouts/InnerLayout'\n\nconst IndexPage: React.FC = () => {\n  return (\n    <InnerLayout>\n      <MainMenu />\n    </InnerLayout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}