{"version":3,"sources":["webpack://sky-plus-epg-simulator/./src/helpers/randomNumber.ts","webpack://sky-plus-epg-simulator/./src/assets/images/sharing-image.jpg","webpack://sky-plus-epg-simulator/./src/components/SEO.tsx","webpack://sky-plus-epg-simulator/./src/layouts/InnerLayout.tsx","webpack://sky-plus-epg-simulator/./src/pages/interactive/coming-next.tsx"],"names":["randomNumber","min","max","Math","ceil","random","description","meta","title","site","useStaticQuery","metaDescription","siteMetadata","realTitle","Title","Meta","name","content","SharingImageUrl","Link","rel","href","map","m","i","key","children","useStyles","makeStyles","root","background","Colors","position","top","bottom","right","left","display","alignItems","justifyContent","message","lineHeight","fontSize","textAlign","width","padding","color","header","fontFamily","fontStretch","location","classes","serviceName","state","nextUrl","serviceDescription","useEffect","timeoutKey","setTimeout","navigate","clearTimeout","className"],"mappings":"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","file":"component---src-pages-interactive-coming-next-tsx-342316f40bb6d2db8bd9.js","sourcesContent":["/**\n * Returns a random number between two values\n */\nexport function randomNumber(min: number, max: number): number {\n  return Math.ceil(Math.random() * (max - min)) + min\n}\n","export default __webpack_public_path__ + \"static/sharing-image-db5dc5b9424e9194bebb470cf9c6e978.jpg\";","import SharingImageUrl from '@assets/images/sharing-image.jpg'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport { Link, Meta, Title } from 'react-head'\n\ntype MetaEntry = {\n  name: string\n  content: string\n}\n\ninterface Props {\n  description?: string\n  meta?: MetaEntry[]\n  title: string\n}\n\nconst SEO: React.FC<Props> = ({ description, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const realTitle = title ? `${title} | ${site.siteMetadata.title}` : site.siteMetadata.title\n\n  return (\n    <>\n      <Title>{realTitle}</Title>\n      <Meta name=\"description\" content={metaDescription} />\n\n      <Meta name=\"og:locale\" content=\"en_GB\" />\n      <Meta name=\"og:title\" content={realTitle} />\n      <Meta name=\"og:description\" content={metaDescription} />\n      <Meta name=\"og:type\" content=\"website\" />\n      <Meta name=\"og:image\" content={SharingImageUrl} />\n\n      <Meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <Meta name=\"twitter:title\" content={realTitle} />\n      <Meta name=\"twitter:description\" content={metaDescription} />\n      <Meta name=\"twitter:creator\" content=\"@davwheat\" />\n      <Meta name=\"twitter:site\" content=\"@davwheat\" />\n      <Meta name=\"twitter:image\" content={SharingImageUrl} />\n      <Meta name=\"twitter:image:alt\" content=\"Screenshot of the Sky+ Web EPG.\" />\n\n      {/* Establish connection to Sky's EPG API */}\n      <Link rel=\"preconnect\" href=\"https://awk.epgsky.com/\" />\n\n      {meta && meta.map((m, i) => <Meta key={`${m.name}--${i}`} name={m.name} content={m.content} />)}\n    </>\n  )\n}\n\nexport default SEO\n","import SEO from '@components/SEO'\nimport React from 'react'\n\ninterface Props {\n  title?: string\n  description?: string\n  children: React.ReactNode\n}\n\nconst InnerLayout: React.FC<Props> = ({ title, description, children }) => {\n  return (\n    <>\n      <SEO title={title} description={description} />\n      {children}\n    </>\n  )\n}\n\nexport default InnerLayout\n","import Colors from '@data/Colors'\nimport { randomNumber } from '@helpers/randomNumber'\nimport InnerLayout from '@layouts/InnerLayout'\nimport { makeStyles } from '@material-ui/core'\nimport type { WindowLocation } from '@reach/router'\nimport { navigate, PageProps } from 'gatsby'\nimport React, { useEffect } from 'react'\n\ntype Props = PageProps<\n  object,\n  object,\n  WindowLocation<{\n    serviceName: string\n    nextUrl: string\n    serviceDescription: string\n  }>['state']\n>\n\nconst useStyles = makeStyles({\n  root: {\n    background: Colors.accent,\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  message: {\n    lineHeight: 2.25,\n    fontSize: 28,\n    textAlign: 'center',\n    width: '85%',\n    padding: 16,\n    color: '#fff',\n    background: '#003399',\n  },\n  header: {\n    fontFamily: 'ZurichBT',\n  },\n  title: {\n    fontFamily: 'Zurich',\n    fontStretch: 'expanded',\n  },\n  description: {\n    fontFamily: 'Zurich',\n    fontStretch: 'condensed',\n  },\n})\n\nconst ComingNext: React.FC<Props> = ({ location }) => {\n  const classes = useStyles()\n\n  const serviceName = location?.state?.serviceName || 'Unknown'\n  const nextUrl = location?.state?.nextUrl || '/interactive/service-unavailable'\n  const serviceDescription = location?.state?.serviceDescription || 'I have no clue what service this is'\n\n  useEffect(() => {\n    const timeoutKey = setTimeout(() => {\n      navigate(nextUrl)\n    }, randomNumber(6000, 10000))\n\n    return () => {\n      clearTimeout(timeoutKey)\n    }\n  })\n\n  return (\n    <InnerLayout>\n      <div className={classes.root}>\n        <article className={classes.message}>\n          {/* WHY IS IT 4 FULL STOPS?! */}\n          <h1 className={classes.header}>Coming next....</h1>\n          <h2 className={classes.title}>{serviceName}</h2>\n          <p className={classes.description}>{serviceDescription}</p>\n        </article>\n      </div>\n    </InnerLayout>\n  )\n}\n\nexport default ComingNext\n"],"sourceRoot":""}