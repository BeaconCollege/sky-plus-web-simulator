{"version":3,"sources":["webpack://sky-plus-epg-simulator/./src/helpers/randomNumber.ts","webpack://sky-plus-epg-simulator/./src/pages/interactive/coming-next.tsx"],"names":["randomNumber","min","max","Math","ceil","random","useStyles","makeStyles","root","background","Colors","position","top","bottom","right","left","display","alignItems","justifyContent","message","lineHeight","fontSize","textAlign","width","padding","color","header","fontFamily","title","fontStretch","description","location","classes","serviceName","state","nextUrl","serviceDescription","useEffect","timeoutKey","setTimeout","navigate","clearTimeout","className"],"mappings":"qIAGO,SAASA,EAAaC,EAAaC,GACxC,OAAOC,KAAKC,KAAKD,KAAKE,UAAYH,EAAMD,IAAQA,E,0ICc5CK,GAAYC,OAAW,CAC3BC,KAAM,CACJC,WAAYC,WACZC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,KAAM,EACNC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,QAAS,CACPC,WAAY,KACZC,SAAU,GACVC,UAAW,SACXC,MAAO,MACPC,QAAS,GACTC,MAAO,OACPhB,WAAY,WAEdiB,OAAQ,CACNC,WAAY,YAEdC,MAAO,CACLD,WAAY,SACZE,YAAa,YAEfC,YAAa,CACXH,WAAY,SACZE,YAAa,eAmCjB,UA/BoC,SAAC,GAAkB,IAAD,MAAfE,EAAe,EAAfA,SAC/BC,EAAU1B,IAEV2B,GAAcF,SAAA,UAAAA,EAAUG,aAAV,eAAiBD,cAAe,UAC9CE,GAAUJ,SAAA,UAAAA,EAAUG,aAAV,eAAiBC,UAAW,mCACtCC,GAAqBL,SAAA,UAAAA,EAAUG,aAAV,eAAiBE,qBAAsB,sCAYlE,OAVAC,gBAAU,WACR,IAAMC,EAAaC,YAAW,YAC5BC,cAASL,MACRnC,OAAa,IAAM,MAEtB,OAAO,WACLyC,aAAaH,OAKf,wBAAC,IAAD,KACE,+BAAKI,UAAWV,EAAQxB,MACtB,mCAASkC,UAAWV,EAAQb,SAE1B,8BAAIuB,UAAWV,EAAQN,QAAvB,mBACA,8BAAIgB,UAAWV,EAAQJ,OAAQK,GAC/B,6BAAGS,UAAWV,EAAQF,aAAcM","file":"component---src-pages-interactive-coming-next-tsx-b07b822b06d9800cb249.js","sourcesContent":["/**\n * Returns a random number between two values\n */\nexport function randomNumber(min: number, max: number): number {\n  return Math.ceil(Math.random() * (max - min)) + min\n}\n","import Colors from '@data/Colors'\nimport { randomNumber } from '@helpers/randomNumber'\nimport InnerLayout from '@layouts/InnerLayout'\nimport { makeStyles } from '@material-ui/core'\nimport type { WindowLocation } from '@reach/router'\nimport { navigate, PageProps } from 'gatsby'\nimport React, { useEffect } from 'react'\n\ntype Props = PageProps<\n  object,\n  object,\n  WindowLocation<{\n    serviceName: string\n    nextUrl: string\n    serviceDescription: string\n  }>['state']\n>\n\nconst useStyles = makeStyles({\n  root: {\n    background: Colors.accent,\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  message: {\n    lineHeight: 2.25,\n    fontSize: 28,\n    textAlign: 'center',\n    width: '85%',\n    padding: 16,\n    color: '#fff',\n    background: '#003399',\n  },\n  header: {\n    fontFamily: 'ZurichBT',\n  },\n  title: {\n    fontFamily: 'Zurich',\n    fontStretch: 'expanded',\n  },\n  description: {\n    fontFamily: 'Zurich',\n    fontStretch: 'condensed',\n  },\n})\n\nconst ComingNext: React.FC<Props> = ({ location }) => {\n  const classes = useStyles()\n\n  const serviceName = location?.state?.serviceName || 'Unknown'\n  const nextUrl = location?.state?.nextUrl || '/interactive/service-unavailable'\n  const serviceDescription = location?.state?.serviceDescription || 'I have no clue what service this is'\n\n  useEffect(() => {\n    const timeoutKey = setTimeout(() => {\n      navigate(nextUrl)\n    }, randomNumber(6000, 10000))\n\n    return () => {\n      clearTimeout(timeoutKey)\n    }\n  })\n\n  return (\n    <InnerLayout>\n      <div className={classes.root}>\n        <article className={classes.message}>\n          {/* WHY IS IT 4 FULL STOPS?! */}\n          <h1 className={classes.header}>Coming next....</h1>\n          <h2 className={classes.title}>{serviceName}</h2>\n          <p className={classes.description}>{serviceDescription}</p>\n        </article>\n      </div>\n    </InnerLayout>\n  )\n}\n\nexport default ComingNext\n"],"sourceRoot":""}