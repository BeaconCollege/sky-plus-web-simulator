{"version":3,"sources":["webpack://sky-plus-epg-simulator/./src/data/ErrorCodes.tsx","webpack://sky-plus-epg-simulator/./src/components/ErrorMessage.tsx","webpack://sky-plus-epg-simulator/./src/components/FullScreenError.tsx","webpack://sky-plus-epg-simulator/./src/helpers/controlsShownStateSetter.ts","webpack://sky-plus-epg-simulator/./src/assets/images/sharing-image.jpg","webpack://sky-plus-epg-simulator/./src/components/SEO.tsx","webpack://sky-plus-epg-simulator/./src/layouts/InnerLayout.tsx","webpack://sky-plus-epg-simulator/./src/pages/interactive/service-unavailable.tsx"],"names":["ErrorCodes","ErrorText","NO_CARD_INSERTED","NO_SATELLITE_SIGNAL","NO_SATELLITE_SIGNAL_2","useStyles","makeStyles","messageBox","width","overflow","maxHeight","messageBoxWider","messageBoxHorizCenter","margin","messageBoxHeader","background","Colors","color","textTransform","lineHeight","fontSize","textAlign","position","messageBoxErrorCode","right","messageBoxContent","display","flexDirection","justifyContent","padding","paddingBottom","fontFamily","letterSpacing","minHeight","messageBoxFooter","title","errorCode","children","backUpPrompt","backUpPromptTextAction","onBackUp","wider","horizontallyCentered","classes","setControlsState","useSetRecoilState","controlsState","controlsShownStateSetter","useEffect","backUpEventListener","e","detail","control","stopImmediatePropagation","document","addEventListener","removeEventListener","role","className","clsx","String","padStart","ControlText","root","top","bottom","left","alignItems","props","controlName","isShown","Array","isArray","controlsRaw","controls","forEach","Object","keys","includes","description","meta","site","useStaticQuery","metaDescription","siteMetadata","realTitle","Title","Meta","name","content","SharingImageUrl","map","m","i","key","location","serviceName","state","navigate","selectedTab"],"mappings":"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","file":"component---src-pages-interactive-service-unavailable-tsx-beeda7afa1ca3ad08de4.js","sourcesContent":["import React from 'react'\n\n/**\n * List of known Sky error codes.\n *\n * Not complete at all.\n */\nenum ErrorCodes {\n  NO_CARD_INSERTED = 1,\n  CARD_READ_ERROR = 2,\n  CARD_CHECK_FAIL = 3,\n  UNAUTHORISED_CARD = 6,\n  /**\n   * CP01 on Sky+HD R010 and newer\n   */\n  UNPAIRED_CARD = 7,\n  ENCRYPTION_KEY_FAILURE = 8,\n  UNAUTHORISED_CARD_2 = 9,\n  NO_SATELLITE_SIGNAL = 28,\n  NO_SATELLITE_SIGNAL_2 = 29,\n}\n\nexport const ErrorText = {\n  [ErrorCodes.NO_CARD_INSERTED]: <>Insert your Sky viewing card</>,\n  [ErrorCodes.NO_SATELLITE_SIGNAL]: (\n    <>\n      No Satellite Signal is being received.\n      <br />\n      Please unplug your box from the mains, then plug it back in and wait 5 minutes before trying again.\n      <br />\n      If the fault persists, contact customer services.\n    </>\n  ),\n  [ErrorCodes.NO_SATELLITE_SIGNAL_2]: (\n    <>\n      No Satellite Signal is being received.\n      <br />\n      Please unplug your box from the mains, then plug it back in and wait 5 minutes before trying again.\n      <br />\n      If the fault persists, contact customer services.\n    </>\n  ),\n} as const\n\nexport default ErrorCodes\n","import { makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\nimport React, { useEffect } from 'react'\nimport { useSetRecoilState } from 'recoil'\nimport { controlsState } from '../atoms'\nimport Colors from '../data/Colors'\nimport ErrorCodes, { ErrorText } from '../data/ErrorCodes'\nimport controlsShownStateSetter from '../helpers/controlsShownStateSetter'\nimport ControlText from './ControlText'\n\nconst useStyles = makeStyles({\n  messageBox: {\n    width: '80%',\n    overflow: 'hidden',\n    maxHeight: '80%',\n  },\n  messageBoxWider: {\n    width: '92%',\n  },\n  messageBoxHorizCenter: {\n    margin: 'auto',\n  },\n  messageBoxHeader: {\n    background: Colors.yellowMain,\n    color: Colors.main,\n    textTransform: 'uppercase',\n    lineHeight: '29px',\n    fontSize: 24,\n    textAlign: 'center',\n    position: 'relative',\n  },\n  messageBoxErrorCode: {\n    position: 'absolute',\n    right: 4,\n  },\n  messageBoxContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: 4,\n    paddingBottom: 0,\n    fontFamily: 'ZurichBT',\n    background: Colors.mainLight,\n    color: Colors.mainText,\n    fontSize: 25,\n    textAlign: 'center',\n    letterSpacing: 0.5,\n    lineHeight: '32px',\n    minHeight: 32 * 4 + 4 + 4,\n  },\n  messageBoxFooter: {\n    color: Colors.yellowText,\n    paddingBottom: 1,\n  },\n})\n\nexport interface ErrorMessageProps {\n  /**\n   * Error message title\n   *\n   * @default \"For your information\"\n   */\n  title?: string\n  /**\n   * Error message number\n   *\n   * @default 29\n   */\n  errorCode?: number | null\n  /**\n   * Error message content\n   *\n   * @default \"No Satellite Signal is being received. [...]\"\n   */\n  children?: React.ReactNode\n  /**\n   * Whether to show the Back Up prompt or not\n   *\n   * @default false\n   */\n  backUpPrompt?: boolean\n  /**\n   * Custom Back Up prompt action text.\n   *\n   * Results in: `Press BACK UP to <text here>`\n   */\n  backUpPromptTextAction?: string\n  onBackUp?: () => void\n  /**\n   * Use the wider variant of error message. This is used when the error message is shown within the EPG itself.\n   */\n  wider?: boolean\n  /**\n   * Horizontally center the message box within the parent container.\n   *\n   * (Applies `margin: auto`.)\n   */\n  horizontallyCentered?: boolean\n}\n\n/**\n * Displays a Sky-themed error message.\n *\n * Defaults to a No Satellite error.\n *\n * Title is almost always \"FOR YOUR INFORMATION\" on a real box.\n */\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({\n  title = 'For your information',\n  errorCode = ErrorCodes.NO_SATELLITE_SIGNAL,\n  children = ErrorText[ErrorCodes.NO_SATELLITE_SIGNAL],\n  backUpPrompt = false,\n  backUpPromptTextAction = 'return',\n  onBackUp = () => {},\n  wider = false,\n  horizontallyCentered = false,\n}) => {\n  const classes = useStyles()\n  const setControlsState = useSetRecoilState(controlsState)\n\n  if (backUpPrompt) {\n    setControlsState(controlsShownStateSetter('backUp', true))\n  }\n\n  useEffect(() => {\n    if (backUpPrompt) {\n      function backUpEventListener(e: SkyControlPressedEvent) {\n        if (e.detail.control === 'backUp') {\n          e.stopImmediatePropagation()\n          onBackUp()\n        }\n      }\n\n      document.addEventListener('skyControlPressed', backUpEventListener as EventListener)\n\n      return () => {\n        document.removeEventListener('skyControlPressed', backUpEventListener as EventListener)\n        setControlsState(controlsShownStateSetter('backUp', false))\n      }\n    }\n  })\n\n  return (\n    <section\n      role=\"alert\"\n      className={clsx(classes.messageBox, wider && classes.messageBoxWider, horizontallyCentered && classes.messageBoxHorizCenter)}\n    >\n      <header className={clsx('thick-text', classes.messageBoxHeader)}>\n        {title}\n        <span className={classes.messageBoxErrorCode}>\n          {errorCode !== null && typeof errorCode !== 'undefined' && String(errorCode).padStart(2, '0')}\n        </span>\n      </header>\n      <article className={classes.messageBoxContent}>\n        {children}\n        {backUpPrompt && (\n          <footer className={classes.messageBoxFooter}>\n            Press <ControlText>BACK UP</ControlText> to {backUpPromptTextAction}\n          </footer>\n        )}\n      </article>\n    </section>\n  )\n}\n\nexport default ErrorMessage\n","import { makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport Colors from '../data/Colors'\nimport ErrorMessage, { ErrorMessageProps } from './ErrorMessage'\n\nconst useStyles = makeStyles({\n  root: {\n    background: Colors.accent,\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  messageBox: {\n    width: '80%',\n    overflow: 'hidden',\n    maxHeight: '80%',\n  },\n  messageBoxHeader: {\n    background: Colors.yellowMain,\n    color: Colors.main,\n    textTransform: 'uppercase',\n    lineHeight: '29px',\n    fontSize: 24,\n    textAlign: 'center',\n    position: 'relative',\n  },\n  messageBoxErrorCode: {\n    position: 'absolute',\n    right: 4,\n  },\n  messageBoxContent: {\n    padding: 4,\n    paddingBottom: 0,\n    fontFamily: 'ZurichBT',\n    background: Colors.mainLight,\n    color: Colors.mainText,\n    fontSize: 25,\n    textAlign: 'center',\n    letterSpacing: 0.5,\n    lineHeight: '32px',\n  },\n})\n\n/**\n * Displays a full-screen Sky error message using the props provided.\n */\nconst FullScreenError: React.FC<ErrorMessageProps> = ({ ...props }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <ErrorMessage {...props} />\n    </div>\n  )\n}\n\nexport default FullScreenError\n","/**\n * Returns a set state function to be passed into `useSetRecoilState`.\n *\n * If `isShown` is not provided, the control will be toggled.\n *\n * @example <caption>Shows the back up button</caption>\n * useSetRecoilState(controlsState)(controlsShownStateSetter('backUp', true))\n *\n * @param controlName Name of array of names for the control(s) to show/hide/toggle\n * @param isShown (optional) Whether it/they should be shown or not\n * @returns Recoil setState handler function to set the visibility of this control\n */\nexport default function controlsShownStateSetter(controlName: SkyControl | SkyControl[], isShown?: boolean) {\n  if (Array.isArray(controlName)) {\n    return controlsRaw => {\n      let controls = { ...controlsRaw }\n      console.log('start', controls)\n\n      controlName.forEach(control => {\n        if (Object.keys(controls).includes(control)) {\n          controls[control] = typeof isShown !== 'boolean' ? !controls[control] : isShown\n        } else {\n          throw `Invalid control provided to \\`controlsShownStateSetter\\`: \"${control}\".`\n        }\n      })\n\n      console.log(controls)\n      return controls\n    }\n  }\n\n  return controlsRaw => {\n    let controls = { ...controlsRaw }\n    console.log('start', controls)\n\n    if (Object.keys(controls).includes(controlName)) {\n      controls[controlName] = typeof isShown !== 'boolean' ? !controls[controlName] : isShown\n    } else {\n      throw `Invalid control provided to \\`controlsShownStateSetter\\`: \"${controlName}\".`\n    }\n\n    console.log(controls)\n    return controls\n  }\n}\n","export default __webpack_public_path__ + \"static/sharing-image-db5dc5b9424e9194bebb470cf9c6e978.jpg\";","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport { Meta, Title } from 'react-head'\nimport SharingImageUrl from '../assets/images/sharing-image.jpg'\n\ntype MetaEntry = {\n  name: string\n  content: string\n}\n\ninterface Props {\n  description?: string\n  meta?: MetaEntry[]\n  title: string\n}\n\nconst SEO: React.FC<Props> = ({ description, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const realTitle = title ? `${title} | ${site.siteMetadata.title}` : site.siteMetadata.title\n\n  return (\n    <>\n      <Title>{realTitle}</Title>\n      <Meta name=\"description\" content={metaDescription} />\n\n      <Meta name=\"og:locale\" content=\"en_GB\" />\n      <Meta name=\"og:title\" content={realTitle} />\n      <Meta name=\"og:description\" content={metaDescription} />\n      <Meta name=\"og:type\" content=\"website\" />\n      <Meta name=\"og:image\" content={SharingImageUrl} />\n\n      <Meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <Meta name=\"twitter:title\" content={realTitle} />\n      <Meta name=\"twitter:description\" content={metaDescription} />\n      <Meta name=\"twitter:creator\" content=\"@davwheat\" />\n      <Meta name=\"twitter:site\" content=\"@davwheat\" />\n      <Meta name=\"twitter:image\" content={SharingImageUrl} />\n      <Meta name=\"twitter:image:alt\" content=\"Screenshot of the Sky+ Web EPG.\" />\n\n      {meta && meta.map((m, i) => <Meta key={`${m.name}--${i}`} name={m.name} content={m.content} />)}\n    </>\n  )\n}\n\nexport default SEO\n","import React from 'react'\nimport SEO from '../components/SEO'\n\ninterface Props {\n  title?: string\n  description?: string\n  children: React.ReactNode\n}\n\nconst InnerLayout: React.FC<Props> = ({ title, description, children }) => {\n  return (\n    <>\n      <SEO title={title} description={description} />\n      {children}\n    </>\n  )\n}\n\nexport default InnerLayout\n","import type { WindowLocation } from '@reach/router'\nimport { navigate, PageProps } from 'gatsby'\nimport React from 'react'\nimport FullScreenError from '../../components/FullScreenError'\nimport InnerLayout from '../../layouts/InnerLayout'\n\ntype Props = PageProps<object, object, WindowLocation<{ serviceName?: string }>['state']>\n\nconst ServiceUnavailablePage: React.FC<Props> = ({ location }) => {\n  const serviceName = location?.state?.serviceName || 'This interactive service'\n\n  return (\n    <InnerLayout>\n      <FullScreenError\n        errorCode={null}\n        backUpPrompt\n        backUpPromptTextAction=\"cancel\"\n        onBackUp={() => navigate('/', { state: { selectedTab: 'INTERACTIVE' } })}\n      >\n        <br />\n        {serviceName} is not available.\n      </FullScreenError>\n    </InnerLayout>\n  )\n}\n\nexport default ServiceUnavailablePage\n"],"sourceRoot":""}